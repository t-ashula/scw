#!/usr/bin/env node

var WMapper = require(__dirname + '/../src/wmapper'),
  program = require('commander'),
  fs = require('fs'),
  wmapper, ps,
  url, res;

program
  .version(JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version)
  .usage('[options] <url>')
  .option('-a, --agent <agent>', 'set user agent string')
  .option('--verbose', 'verbose output')
  .option('--plugins', 'show all plugins')
  .option('--plugin <plugin>', 'comma separated plugin to use')
  .option('--noplugin', 'disable all plugins')
  .parse(process.argv);

program.name = 'wmapper';
wmapper = new WMapper();

if (program.plugins) {
  ps = wmapper.allPlugins();
  ps.forEach(function (p) {
    console.log([p.name, p.type, p.desc, p.enable].join(' - '));
  });
  process.exit();
}

if (program.args.length !== 1) {
  program.help();
}

if (program.plugin && program.noplugin) {
  console.log('can not use "noplugin" and "plugin" at same time');
  program.help();
}

url = program.args[0];

if (program.agent) {
  console.log(program.agent);
  wmapper.userAgent(program.agent);
}

if (program.verbose) {
  wmapper.loglevel('verbose');
}

if (program.plugin) {
  wmapper.allPlugins().forEach(function(p){
    wmapper.disablePlugin(p.name);
  });
  program.plugin.split(/,/).forEach(function(p){
    wmapper.enablePlugin(p);
  });
}

if (program.noplugin) {
  wmapper.allPlugins().forEach(function(p){
    wmapper.disablePlugin(p.name);
  });
}

wmapper.run(url);
